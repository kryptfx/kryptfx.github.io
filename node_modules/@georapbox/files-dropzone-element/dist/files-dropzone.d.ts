/**
 * Represents a value that may be of type T, or null.
 */
export type Nullable<T> = T | null;
/**
 * @summary A custom element that allows users to drag and drop files into it.
 * @documentation https://github.com/georapbox/files-dropzone-element
 *
 * @tagname files-dropzone - This is the default tag name, unless overridden by the `defineCustomElement` method.
 *
 * @property {string} accept - A comma-separated list of unique file type specifiers describing file types to allow.
 * @property {boolean} disabled - Determines whether the dropzone is disabled.
 * @property {number} maxFiles - The maximum number of files allowed to be dropped.
 * @property {number} maxSize - The maximum file size allowed in bytes.
 * @property {number} minSize - The minimum file size allowed in bytes.
 * @property {boolean} multiple - Allows multiple files to be dropped.
 * @property {boolean} autoFocus - Automatically focuses the dropzone when it's connected to the DOM.
 * @property {boolean} noStyle - Prevents the dropzone from applying any styling.
 *
 * @attribute {string} accept - Reflects the accept property.
 * @attribute {boolean} disabled - Reflects the disabled property.
 * @attribute {number} max-files - Reflects the maxFiles property.
 * @attribute {number} max-size - Reflects the maxSize property.
 * @attribute {number} min-size - Reflects the minSize property.
 * @attribute {boolean} multiple - Reflects the multiple property.
 * @attribute {boolean} auto-focus - Reflects the autoFocus property.
 * @attribute {boolean} no-style - Reflects the noStyle property.
 *
 * @slot - The default slot content of the dropzone.
 *
 * @csspart dropzone - The dropzone element.
 * @csspart dropzone--dragover - The state of the dropzone when dragging over it.
 *
 * @cssproperty --dropzone-border-width - The border width of the dropzone.
 * @cssproperty --dropzone-border-style - The border style of the dropzone.
 * @cssproperty --dropzone-border-radius - The border radius of the dropzone.
 * @cssproperty --dropzone-border-color - The border color of the dropzone.
 * @cssproperty --dropzone-border-color-dragover - The border color of the dropzone when dragging over it.
 * @cssproperty --dropzone-border-color-hover - The border color of the dropzone when hovering over it.
 * @cssproperty --dropzone-background-color - The background color of the dropzone.
 * @cssproperty --dropzone-background-color-dragover - The background color of the dropzone when dragging over it.
 * @cssproperty --dropzone-background-color-hover - The background color of the dropzone when hovering over it.
 * @cssproperty --dropzone-body-color - The text color of the dropzone.
 * @cssproperty --dropzone-body-color-dragover - The text color of the dropzone when dragging over it.
 * @cssproperty --dropzone-body-color-hover - The text color of the dropzone when hovering over it.
 * @cssproperty --dropzone-focus-shadow-rgb - The RGB value of the dropzone's focus shadow.
 * @cssproperty --dropzone-focus-box-shadow - The box shadow of the dropzone when focused.
 * @cssproperty --dropzone-transition-duration - The transition's duration for the dropzone area.
 *
 * @event files-dropzone-drop - Fired when files are dropped.
 * @event files-dropzone-drop-accepted - Fired when files dropped files are accepted.
 * @event files-dropzone-drop-rejected - Fired when files dropped files are rejected.
 * @event files-dropzone-dragenter - Fired when files are dragged into the dropzone.
 * @event files-dropzone-dragover - Fired when files are dragged over the dropzone.
 * @event files-dropzone-dragleave - Fired when files are dragged out of the dropzone.
 * @event files-dropzone-error - Fired when there is any error in the process of reading dropped files or directories.
 *
 * @method defineCustomElement - Static method. Defines a custom element with the given name.
 * @method openFileDialog - Instance method. Opens the file dialog programmatically.
 */
export class FilesDropzone extends HTMLElement {
    static get observedAttributes(): string[];
    /**
     * Defines a custom element with the given name.
     * The name must contain a dash (-).
     *
     * @param {string} [elementName='files-dropzone'] - The name of the custom element.
     * @example
     *
     * FilesDropzone.defineCustomElement('my-dropzone');
     */
    static defineCustomElement(elementName?: string | undefined): void;
    /**
     * Lifecycle method that is called when attributes are changed, added, removed, or replaced.
     *
     * @param {string} name - The name of the attribute.
     * @param {string} oldValue - The old value of the attribute.
     * @param {string} newValue - The new value of the attribute.
     */
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    /**
     * Lifecycle method that is called when the element is added to the DOM.
     */
    connectedCallback(): void;
    /**
     * Lifecycle method that is called when the element is removed from the DOM.
     */
    disconnectedCallback(): void;
    set accept(value: string);
    /**
     * @type {string} - A comma-separated list of unique file type specifiers describing file types to allow.
     * @attribute accept - Reflects the accept property.
     */
    get accept(): string;
    set disabled(value: boolean);
    /**
     * @type {boolean} - Determines whether the dropzone is disabled.
     * @default false
     * @attribute disabled - Reflects the disabled property.
     */
    get disabled(): boolean;
    set maxFiles(value: number);
    /**
     * @type {number} - The maximum number of files allowed to be dropped.
     * @default Infinity
     * @attribute max-files - Reflects the maxFiles property.
     */
    get maxFiles(): number;
    set maxSize(value: number);
    /**
     * @type {number} - The maximum file size allowed in bytes.
     * @default Infinity
     * @attribute max-size - Reflects the maxSize property.
     */
    get maxSize(): number;
    set minSize(value: number);
    /**
     * @type {number} - The minimum file size allowed in bytes.
     * @default 0
     * @attribute min-size - Reflects the minSize property.
     */
    get minSize(): number;
    set multiple(value: boolean);
    /**
     * @type {boolean} - Allows multiple files to be dropped.
     * @default false
     * @attribute multiple - Reflects the multiple property.
     */
    get multiple(): boolean;
    set autoFocus(value: boolean);
    /**
     * @type {boolean} - Automatically focuses the dropzone when it's connected to the DOM.
     * @default false
     * @attribute auto-focus - Reflects the autoFocus property.
     */
    get autoFocus(): boolean;
    set noStyle(value: boolean);
    /**
     * @type {boolean} - Prevents the dropzone from applying any styling.
     * @default false
     * @attribute no-style - Reflects the noStyle property.
     */
    get noStyle(): boolean;
    /**
     * Opens the file dialog programmatically.
     */
    openFileDialog(): void;
    #private;
}
//# sourceMappingURL=files-dropzone.d.ts.map