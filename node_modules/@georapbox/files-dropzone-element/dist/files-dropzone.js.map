{
  "version": 3,
  "sources": ["../src/utils/is-valid-file.js", "../src/utils/files-selector.js", "../src/files-dropzone.js"],
  "sourcesContent": ["// @ts-check\n\n/**\n * Checks if a file is valid based on the accepted file type specifiers.\n *\n * @param {File} file - The File object to validate.\n * @param {string} [acceptedTypeSpecifiers=''] - The accepted file type specifiers.\n * @returns {boolean} - True if the file is valid, false otherwise.\n */\nexport function isValidFile(file, acceptedTypeSpecifiers = '') {\n  if (!acceptedTypeSpecifiers) {\n    return true;\n  }\n\n  const acceptedMimeTypesList = [\n    ...new Set(\n      acceptedTypeSpecifiers\n        .split(',')\n        .map(v => v.trim())\n        .filter(Boolean)\n    )\n  ];\n\n  const fileMimeType = file.type;\n  const baseMimeType = fileMimeType.replace(/\\/.*$/, '');\n\n  for (const validType of acceptedMimeTypesList) {\n    if (validType.charAt(0) === '.') {\n      if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n        return true;\n      }\n    } else if (/\\/\\*$/.test(validType)) {\n      // Check for mime type that looks like \"image/*\" or similar.\n      if (baseMimeType === validType.replace(/\\/.*$/, '')) {\n        return true;\n      }\n    } else {\n      if (fileMimeType === validType) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n", "// @ts-check\n\n/**\n * A map of common file extensions and their associated MIME types.\n */\nconst COMMON_MIME_TYPES = new Map([\n  // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n  ['aac', 'audio/aac'],\n  ['abw', 'application/x-abiword'],\n  ['arc', 'application/x-freearc'],\n  ['avif', 'image/avif'],\n  ['avi', 'video/x-msvideo'],\n  ['azw', 'application/vnd.amazon.ebook'],\n  ['bin', 'application/octet-stream'],\n  ['bmp', 'image/bmp'],\n  ['bz', 'application/x-bzip'],\n  ['bz2', 'application/x-bzip2'],\n  ['cda', 'application/x-cdf'],\n  ['csh', 'application/x-csh'],\n  ['css', 'text/css'],\n  ['csv', 'text/csv'],\n  ['doc', 'application/msword'],\n  ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n  ['eot', 'application/vnd.ms-fontobject'],\n  ['epub', 'application/epub+zip'],\n  ['gz', 'application/gzip'],\n  ['gif', 'image/gif'],\n  ['heic', 'image/heic'],\n  ['heif', 'image/heif'],\n  ['htm', 'text/html'],\n  ['html', 'text/html'],\n  ['ico', 'image/vnd.microsoft.icon'],\n  ['ics', 'text/calendar'],\n  ['jar', 'application/java-archive'],\n  ['jpeg', 'image/jpeg'],\n  ['jpg', 'image/jpeg'],\n  ['jxl', 'image/jxl'],\n  ['js', 'text/javascript'],\n  ['json', 'application/json'],\n  ['jsonld', 'application/ld+json'],\n  ['markdown', 'text/markdown'],\n  ['md', 'text/markdown'],\n  ['mid', 'audio/midi'],\n  ['midi', 'audio/midi'],\n  ['mjs', 'text/javascript'],\n  ['mp3', 'audio/mpeg'],\n  ['mp4', 'video/mp4'],\n  ['mpeg', 'video/mpeg'],\n  ['mpkg', 'application/vnd.apple.installer+xml'],\n  ['odp', 'application/vnd.oasis.opendocument.presentation'],\n  ['ods', 'application/vnd.oasis.opendocument.spreadsheet'],\n  ['odt', 'application/vnd.oasis.opendocument.text'],\n  ['oga', 'audio/ogg'],\n  ['ogv', 'video/ogg'],\n  ['ogx', 'application/ogg'],\n  ['opus', 'audio/opus'],\n  ['otf', 'font/otf'],\n  ['png', 'image/png'],\n  ['pdf', 'application/pdf'],\n  ['php', 'application/x-httpd-php'],\n  ['ppt', 'application/vnd.ms-powerpoint'],\n  ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'],\n  ['rar', 'application/vnd.rar'],\n  ['rtf', 'application/rtf'],\n  ['sh', 'application/x-sh'],\n  ['svg', 'image/svg+xml'],\n  ['swf', 'application/x-shockwave-flash'],\n  ['tar', 'application/x-tar'],\n  ['tif', 'image/tiff'],\n  ['tiff', 'image/tiff'],\n  ['ts', 'video/mp2t'],\n  ['ttf', 'font/ttf'],\n  ['txt', 'text/plain'],\n  ['vsd', 'application/vnd.visio'],\n  ['wav', 'audio/wav'],\n  ['weba', 'audio/webm'],\n  ['webm', 'video/webm'],\n  ['webp', 'image/webp'],\n  ['woff', 'font/woff'],\n  ['woff2', 'font/woff2'],\n  ['xhtml', 'application/xhtml+xml'],\n  ['xls', 'application/vnd.ms-excel'],\n  ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\n  ['xml', 'application/xml'],\n  ['xul', 'application/vnd.mozilla.xul+xml'],\n  ['zip', 'application/zip'],\n  ['7z', 'application/x-7z-compressed'],\n\n  // Others\n  ['mkv', 'video/x-matroska'],\n  ['mov', 'video/quicktime'],\n  ['msg', 'application/vnd.ms-outlook']\n]);\n\nconst FILES_TO_IGNORE = [\n  // Thumbnail cache files for macOS and Windows\n  '.DS_Store', // macOs\n  'Thumbs.db' // Windows\n];\n\n/**\n * Adds a `type` property to the file object if it doesn't have one and the file has an extension.\n * This is needed because Firefox doesn't add a type property to files dragged from the desktop.\n * @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1424689\n *\n * @param {File} file - The file object to add the type property to.\n * @returns {File} - The file object with the type property added.\n */\nconst toFileWithMimeType = file => {\n  const { name } = file;\n  const hasExtension = name && name.lastIndexOf('.') !== -1;\n\n  if (hasExtension && !file.type) {\n    const extension = (name.split('.').pop() || '').toLowerCase();\n    const type = COMMON_MIME_TYPES.get(extension);\n\n    if (type) {\n      Object.defineProperty(file, 'type', {\n        value: type,\n        writable: false,\n        configurable: false,\n        enumerable: true\n      });\n    }\n  }\n\n  return file;\n};\n\n/**\n * Adds a `path` property to the file object if it doesn't have one.\n * If `path` is not provided, the `webkitRelativePath` property of the file will be used\n * or the file's name if `webkitRelativePath` is not available.\n *\n * @param {File} file - The file object to add the path property to.\n * @param {string} [path] - The path to set on the file object.\n * @returns {File} - The file object with the path property added.\n */\nconst toFileWithPath = (file, path) => {\n  const fileWithMimeType = toFileWithMimeType(file);\n\n  // @ts-ignore\n  if (typeof fileWithMimeType.path !== 'string') {\n    const { webkitRelativePath } = file;\n\n    Object.defineProperty(fileWithMimeType, 'path', {\n      value: typeof path === 'string' ? path : webkitRelativePath || file.name,\n      writable: false,\n      configurable: false,\n      enumerable: true\n    });\n  }\n\n  return fileWithMimeType;\n};\n\n/**\n * Wrap `FileSystemDirectoryReader.readEntries` in a promise to make working with read entries easier.\n * https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryReader/readEntries\n *\n * @param {FileSystemDirectoryReader} directoryReader - The directory reader to read entries from.\n * @returns {Promise<FileSystemEntry[]>} - A promise that resolves with an array of `FileSystemEntry` objects.\n */\nconst readEntriesPromise = async directoryReader => {\n  return await new Promise((resolve, reject) => {\n    directoryReader.readEntries(resolve, reject);\n  });\n};\n\n/**\n * Read all entries in a directory or sub-directory\n * by calling `readEntries` until it returns an empty array.\n *\n * @param {FileSystemDirectoryReader} directoryReader - The directory reader to read entries from.\n * @returns {Promise<FileSystemEntry[]>} - A promise that resolves with an array of `FileSystemEntry` objects.\n */\nconst readAllDirectoryEntries = async directoryReader => {\n  const entries = [];\n  let readEntries = await readEntriesPromise(directoryReader);\n\n  while (readEntries.length > 0) {\n    entries.push(...readEntries);\n    readEntries = await readEntriesPromise(directoryReader);\n  }\n\n  return entries;\n};\n\n/**\n * Get a `File` object from a `FileSystemFileEntry` object.\n *\n * @param {FileSystemFileEntry} fileEntry - The file entry to get a `File` object from.\n * @returns {Promise<File>} - A promise that resolves with a `File` object.\n */\nconst getFileFromFileEntry = fileEntry => {\n  return new Promise((resolve, reject) => {\n    fileEntry.file(file => resolve(toFileWithPath(file, fileEntry.fullPath)), reject);\n  });\n};\n\n/**\n * Get an array of `File` objects from a `DataTransferItemList` object.\n *\n * @param {DataTransferItemList} dataTransferItemList - The item list to get an array of `File` objects from.\n * @returns {Promise<File[]>} - A promise that resolves with an array of `File` objects.\n */\nconst getFilesFromDataTransferItemList = async dataTransferItemList => {\n  const files = [];\n\n  // Chromium browsers read only 100 files at a time as per the spec, so we need to use\n  // BFS (Breadth-first search) to traverse the entire directory/file structure.\n  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry#javascript_content\n  const queue = [];\n\n  for (const item of dataTransferItemList) {\n    if (item.kind !== 'file') {\n      // Ignore non-file items, such as links.\n      continue;\n    }\n\n    // https://developer.mozilla.org/docs/Web/API/DataTransferItem/webkitGetAsEntry\n    // This function is implemented as `webkitGetAsEntry()` in non-WebKit browsers\n    // including Firefox at this time but it may be renamed to `getAsEntry()` in the future.\n    // @ts-ignore\n    const entry = item.getAsEntry ? item.getAsEntry() : item.webkitGetAsEntry();\n\n    queue.push(entry);\n  }\n\n  while (queue.length > 0) {\n    const entry = queue.shift();\n\n    if (!entry) {\n      continue;\n    } else if (entry.isFile) {\n      const file = await getFileFromFileEntry(entry);\n\n      if (FILES_TO_IGNORE.indexOf(file.name) === -1) {\n        files.push(file);\n      }\n    } else if (entry.isDirectory) {\n      queue.push(...(await readAllDirectoryEntries(entry.createReader())));\n    }\n  }\n\n  return files;\n};\n\n/**\n * Get an array of `File` objects from a `FileList` object.\n *\n * @param {FileList} fileList - The file list to get an array of `File` objects from.\n * @returns {Promise<File[]>} - A promise that resolves with an array of `File` objects.\n */\nconst getFilesFromFileList = async fileList => {\n  const files = [];\n\n  for (const file of fileList) {\n    if (FILES_TO_IGNORE.indexOf(file.name) === -1) {\n      files.push(toFileWithPath(file));\n    }\n  }\n\n  return files;\n};\n\n/**\n * Get an array of `File` objects from an event.\n * This function supports both `drop` and `change` events.\n *\n * @param {*} evt - The event to get an array of `File` objects from.\n * @returns {Promise<File[]>} - A promise that resolves with an array of `File` objects.\n */\nexport const getFilesFromEvent = async evt => {\n  if (evt.dataTransfer) {\n    return evt.dataTransfer.items\n      ? await getFilesFromDataTransferItemList(evt.dataTransfer.items)\n      : await getFilesFromFileList(evt.dataTransfer.files);\n  }\n\n  return await getFilesFromFileList(evt.target.files);\n};\n", "// @ts-check\n\n/**\n * Represents a value that may be of type T, or null.\n *\n * @template T\n * @typedef {T | null} Nullable\n */\n\nimport { isValidFile } from './utils/is-valid-file.js';\nimport { getFilesFromEvent } from './utils/files-selector.js';\n\nconst COMPONENT_NAME = 'files-dropzone';\nconst TOO_MANY_FILES = 'TOO_MANY_FILES';\nconst FILE_TOO_LARGE = 'FILE_TOO_LARGE';\nconst FILE_TOO_SMALL = 'FILE_TOO_SMALL';\nconst INVALID_MIME_TYPE = 'INVALID_MIME_TYPE';\nconst template = document.createElement('template');\n\nconst styles = /* css */ `\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  :host([hidden]),\n  [hidden] {\n    display: none !important;\n  }\n\n  :host {\n    --dropzone-border-width: 2px;\n    --dropzone-border-style: dashed;\n    --dropzone-border-radius: 0.25rem;\n    --dropzone-border-color: #6c757d;\n    --dropzone-border-color-dragover: #0d6efd;\n    --dropzone-border-color-hover: var(--dropzone-border-color-dragover);\n    --dropzone-background-color: #ffffff;\n    --dropzone-background-color-dragover: #f4f4f5;\n    --dropzone-background-color-hover: var(--dropzone-background-color-dragover);\n    --dropzone-body-color: #3f3f46;\n    --dropzone-body-color-dragover: var(--dropzone-body-color);\n    --dropzone-body-color-hover: var(--dropzone-body-color-dragover);\n    --dropzone-focus-shadow-rgb: 49,132,253;\n    --dropzone-focus-box-shadow: 0 0 0 0.25rem rgba(var(--dropzone-focus-shadow-rgb), 0.5);\n    --transition-duration: 0.2s; /* for backwards compatibility */\n    --dropzone-transition-duration: var(--transition-duration);\n\n    display: block;\n  }\n\n  :host(:not([no-style])) .dropzone {\n    border: var(--dropzone-border-width) var(--dropzone-border-style) var(--dropzone-border-color);\n    border-radius: var(--dropzone-border-radius);\n    padding: 3rem 1rem;\n    overflow: hidden;\n    background-color: var(--dropzone-background-color);\n    color: var(--dropzone-body-color);\n    text-align: center;\n    cursor: pointer;\n    transition: border var(--dropzone-transition-duration) ease-in-out, background-color var(--dropzone-transition-duration) ease-in-out, color var(--dropzone-transition-duration) ease-in-out, box-shadow var(--dropzone-transition-duration) ease-in-out;\n  }\n\n  :host(:not([no-style])[disabled]) .dropzone {\n    opacity: 0.8;\n    cursor: not-allowed;\n    user-select: none;\n  }\n\n  :host(:not([no-style]):not([disabled])) .dropzone--dragover {\n    border-color: var(--dropzone-border-color-dragover);\n    background-color: var(--dropzone-background-color-dragover);\n    color: var(--dropzone-body-color-dragover);\n  }\n\n  :host(:not([no-style]):not([disabled])) .dropzone:focus-visible {\n    outline: none;\n    box-shadow: var(--dropzone-focus-box-shadow);\n  }\n\n  @media (hover: hover) {\n    :host(:not([no-style]):not([disabled])) .dropzone:not(.dropzone--dragover):hover {\n      border-color: var(--dropzone-border-color-hover);\n      background-color: var(--dropzone-background-color-hover);\n      color: var(--dropzone-body-color-hover);\n    }\n  }\n`;\n\ntemplate.innerHTML = /* html */ `\n  <style>\n    ${styles}\n  </style>\n\n  <input type=\"file\" id=\"file-input\" hidden>\n\n  <div part=\"dropzone\" class=\"dropzone\" id=\"dropzone\" tabindex=\"0\" role=\"button\" aria-disabled=\"false\">\n    <slot>Drag 'n' drop files here, or click to select files</slot>\n  </div>\n`;\n\n/**\n * @summary A custom element that allows users to drag and drop files into it.\n * @documentation https://github.com/georapbox/files-dropzone-element\n *\n * @tagname files-dropzone - This is the default tag name, unless overridden by the `defineCustomElement` method.\n *\n * @property {string} accept - A comma-separated list of unique file type specifiers describing file types to allow.\n * @property {boolean} disabled - Determines whether the dropzone is disabled.\n * @property {number} maxFiles - The maximum number of files allowed to be dropped.\n * @property {number} maxSize - The maximum file size allowed in bytes.\n * @property {number} minSize - The minimum file size allowed in bytes.\n * @property {boolean} multiple - Allows multiple files to be dropped.\n * @property {boolean} autoFocus - Automatically focuses the dropzone when it's connected to the DOM.\n * @property {boolean} noStyle - Prevents the dropzone from applying any styling.\n *\n * @attribute {string} accept - Reflects the accept property.\n * @attribute {boolean} disabled - Reflects the disabled property.\n * @attribute {number} max-files - Reflects the maxFiles property.\n * @attribute {number} max-size - Reflects the maxSize property.\n * @attribute {number} min-size - Reflects the minSize property.\n * @attribute {boolean} multiple - Reflects the multiple property.\n * @attribute {boolean} auto-focus - Reflects the autoFocus property.\n * @attribute {boolean} no-style - Reflects the noStyle property.\n *\n * @slot - The default slot content of the dropzone.\n *\n * @csspart dropzone - The dropzone element.\n * @csspart dropzone--dragover - The state of the dropzone when dragging over it.\n *\n * @cssproperty --dropzone-border-width - The border width of the dropzone.\n * @cssproperty --dropzone-border-style - The border style of the dropzone.\n * @cssproperty --dropzone-border-radius - The border radius of the dropzone.\n * @cssproperty --dropzone-border-color - The border color of the dropzone.\n * @cssproperty --dropzone-border-color-dragover - The border color of the dropzone when dragging over it.\n * @cssproperty --dropzone-border-color-hover - The border color of the dropzone when hovering over it.\n * @cssproperty --dropzone-background-color - The background color of the dropzone.\n * @cssproperty --dropzone-background-color-dragover - The background color of the dropzone when dragging over it.\n * @cssproperty --dropzone-background-color-hover - The background color of the dropzone when hovering over it.\n * @cssproperty --dropzone-body-color - The text color of the dropzone.\n * @cssproperty --dropzone-body-color-dragover - The text color of the dropzone when dragging over it.\n * @cssproperty --dropzone-body-color-hover - The text color of the dropzone when hovering over it.\n * @cssproperty --dropzone-focus-shadow-rgb - The RGB value of the dropzone's focus shadow.\n * @cssproperty --dropzone-focus-box-shadow - The box shadow of the dropzone when focused.\n * @cssproperty --dropzone-transition-duration - The transition's duration for the dropzone area.\n *\n * @event files-dropzone-drop - Fired when files are dropped.\n * @event files-dropzone-drop-accepted - Fired when files dropped files are accepted.\n * @event files-dropzone-drop-rejected - Fired when files dropped files are rejected.\n * @event files-dropzone-dragenter - Fired when files are dragged into the dropzone.\n * @event files-dropzone-dragover - Fired when files are dragged over the dropzone.\n * @event files-dropzone-dragleave - Fired when files are dragged out of the dropzone.\n * @event files-dropzone-error - Fired when there is any error in the process of reading dropped files or directories.\n *\n * @method defineCustomElement - Static method. Defines a custom element with the given name.\n * @method openFileDialog - Instance method. Opens the file dialog programmatically.\n */\nclass FilesDropzone extends HTMLElement {\n  /** @type {Nullable<HTMLInputElement>} */\n  #fileInput = null;\n\n  /** @type {Nullable<HTMLElement>} */\n  #dropzoneEl = null;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      const shadowRoot = this.attachShadow({ mode: 'open', delegatesFocus: true });\n      shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    if (this.shadowRoot) {\n      this.#fileInput = /** @type {Nullable<HTMLInputElement>} */ (this.shadowRoot.getElementById('file-input'));\n      this.#dropzoneEl = this.shadowRoot.getElementById('dropzone');\n    }\n  }\n\n  static get observedAttributes() {\n    return ['accept', 'disabled', 'multiple'];\n  }\n\n  /**\n   * Lifecycle method that is called when attributes are changed, added, removed, or replaced.\n   *\n   * @param {string} name - The name of the attribute.\n   * @param {string} oldValue - The old value of the attribute.\n   * @param {string} newValue - The new value of the attribute.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'accept' && oldValue !== newValue && this.#fileInput) {\n      this.#fileInput.accept = this.accept;\n    }\n\n    if (name === 'disabled' && oldValue !== newValue && this.#fileInput) {\n      this.#fileInput.disabled = this.disabled;\n\n      if (this.disabled) {\n        this.#dropzoneEl?.removeAttribute('tabindex');\n        this.#dropzoneEl?.setAttribute('aria-disabled', 'true');\n      } else {\n        this.#dropzoneEl?.setAttribute('tabindex', '0');\n        this.#dropzoneEl?.setAttribute('aria-disabled', 'false');\n      }\n    }\n\n    if (name === 'multiple' && oldValue !== newValue && this.#fileInput) {\n      this.#fileInput.multiple = this.multiple;\n    }\n  }\n\n  /**\n   * Lifecycle method that is called when the element is added to the DOM.\n   */\n  connectedCallback() {\n    this.#upgradeProperty('accept');\n    this.#upgradeProperty('disabled');\n    this.#upgradeProperty('maxFiles');\n    this.#upgradeProperty('maxSize');\n    this.#upgradeProperty('minSize');\n    this.#upgradeProperty('multiple');\n    this.#upgradeProperty('autoFocus');\n    this.#upgradeProperty('noStyle');\n\n    this.#fileInput?.addEventListener('change', this.#handleFileInputChange);\n    this.#dropzoneEl?.addEventListener('dragenter', this.#handleDragEnter);\n    this.#dropzoneEl?.addEventListener('dragover', this.#handleDragOver);\n    this.#dropzoneEl?.addEventListener('dragleave', this.#handleDragLeave);\n    this.#dropzoneEl?.addEventListener('drop', this.#handleDrop);\n    this.#dropzoneEl?.addEventListener('click', this.#handleClick);\n    this.#dropzoneEl?.addEventListener('keyup', this.#handleKeyUp);\n\n    this.autoFocus && this.#dropzoneEl?.focus();\n  }\n\n  /**\n   * Lifecycle method that is called when the element is removed from the DOM.\n   */\n  disconnectedCallback() {\n    this.#fileInput?.removeEventListener('change', this.#handleFileInputChange);\n    this.#dropzoneEl?.removeEventListener('dragenter', this.#handleDragEnter);\n    this.#dropzoneEl?.removeEventListener('dragover', this.#handleDragOver);\n    this.#dropzoneEl?.removeEventListener('dragleave', this.#handleDragLeave);\n    this.#dropzoneEl?.removeEventListener('drop', this.#handleDrop);\n    this.#dropzoneEl?.removeEventListener('click', this.#handleClick);\n    this.#dropzoneEl?.removeEventListener('keyup', this.#handleKeyUp);\n  }\n\n  /**\n   * @type {string} - A comma-separated list of unique file type specifiers describing file types to allow.\n   * @attribute accept - Reflects the accept property.\n   */\n  get accept() {\n    return this.getAttribute('accept') || '';\n  }\n\n  set accept(value) {\n    this.setAttribute('accept', value != null ? value.toString() : value);\n  }\n\n  /**\n   * @type {boolean} - Determines whether the dropzone is disabled.\n   * @default false\n   * @attribute disabled - Reflects the disabled property.\n   */\n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value) {\n    this.toggleAttribute('disabled', !!value);\n  }\n\n  /**\n   * @type {number} - The maximum number of files allowed to be dropped.\n   * @default Infinity\n   * @attribute max-files - Reflects the maxFiles property.\n   */\n  get maxFiles() {\n    const num = Number(this.getAttribute('max-files')) || 0;\n\n    if (num <= 0) {\n      return Infinity;\n    }\n\n    return Math.floor(Math.abs(num));\n  }\n\n  set maxFiles(value) {\n    this.setAttribute('max-files', value != null ? value.toString() : value);\n  }\n\n  /**\n   * @type {number} - The maximum file size allowed in bytes.\n   * @default Infinity\n   * @attribute max-size - Reflects the maxSize property.\n   */\n  get maxSize() {\n    const value = this.getAttribute('max-size');\n\n    if (value === null) {\n      return Infinity;\n    }\n\n    const num = Number(value);\n\n    return Number.isNaN(num) ? Infinity : num;\n  }\n\n  set maxSize(value) {\n    this.setAttribute('max-size', value != null ? value.toString() : value);\n  }\n\n  /**\n   * @type {number} - The minimum file size allowed in bytes.\n   * @default 0\n   * @attribute min-size - Reflects the minSize property.\n   */\n  get minSize() {\n    const value = this.getAttribute('min-size');\n\n    if (value === null) {\n      return 0;\n    }\n\n    const num = Number(value);\n\n    return Number.isNaN(num) ? 0 : num;\n  }\n\n  set minSize(value) {\n    this.setAttribute('min-size', value != null ? value.toString() : value);\n  }\n\n  /**\n   * @type {boolean} - Allows multiple files to be dropped.\n   * @default false\n   * @attribute multiple - Reflects the multiple property.\n   */\n  get multiple() {\n    return this.hasAttribute('multiple');\n  }\n\n  set multiple(value) {\n    this.toggleAttribute('multiple', !!value);\n  }\n\n  /**\n   * @type {boolean} - Automatically focuses the dropzone when it's connected to the DOM.\n   * @default false\n   * @attribute auto-focus - Reflects the autoFocus property.\n   */\n  get autoFocus() {\n    return this.hasAttribute('auto-focus');\n  }\n\n  set autoFocus(value) {\n    this.toggleAttribute('auto-focus', !!value);\n  }\n\n  /**\n   * @type {boolean} - Prevents the dropzone from applying any styling.\n   * @default false\n   * @attribute no-style - Reflects the noStyle property.\n   */\n  get noStyle() {\n    return this.hasAttribute('no-style');\n  }\n\n  set noStyle(value) {\n    this.toggleAttribute('no-style', !!value);\n  }\n\n  /**\n   * Handles the change event of the file input.\n   *\n   * @param {*} evt - The event object.\n   */\n  #handleFileInputChange = async evt => {\n    try {\n      this.#handleFilesSelect(await getFilesFromEvent(evt));\n    } catch (error) {\n      this.dispatchEvent(\n        new CustomEvent(`${COMPONENT_NAME}-error`, {\n          bubbles: true,\n          composed: true,\n          detail: { error }\n        })\n      );\n    }\n  };\n\n  /**\n   * Handles the dragenter event of the dropzone.\n   */\n  #handleDragEnter = () => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.dispatchEvent(\n      new Event(`${COMPONENT_NAME}-dragenter`, {\n        bubbles: true,\n        composed: true\n      })\n    );\n  };\n\n  /**\n   * Handles the dragover event of the dropzone.\n   *\n   * @param {*} evt - The event object.\n   */\n  #handleDragOver = evt => {\n    evt.preventDefault();\n\n    if (this.disabled) {\n      evt.dataTransfer.dropEffect = 'none';\n      return;\n    }\n\n    evt.dataTransfer.dropEffect = 'copy';\n\n    if (this.#dropzoneEl) {\n      this.#dropzoneEl.classList.add('dropzone--dragover');\n      this.#dropzoneEl.part.add('dropzone--dragover');\n    }\n\n    this.dispatchEvent(\n      new Event(`${COMPONENT_NAME}-dragover`, {\n        bubbles: true,\n        composed: true\n      })\n    );\n  };\n\n  /**\n   * Handles the dragleave event of the dropzone.\n   */\n  #handleDragLeave = () => {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.#dropzoneEl) {\n      this.#dropzoneEl.classList.remove('dropzone--dragover');\n      this.#dropzoneEl.part.remove('dropzone--dragover');\n    }\n\n    this.dispatchEvent(\n      new Event(`${COMPONENT_NAME}-dragleave`, {\n        bubbles: true,\n        composed: true\n      })\n    );\n  };\n\n  /**\n   * Handles the drop event of the dropzone.\n   *\n   * @param {*} evt - The event object.\n   */\n  #handleDrop = async evt => {\n    if (this.disabled) {\n      return;\n    }\n\n    evt.preventDefault();\n\n    if (this.#dropzoneEl) {\n      this.#dropzoneEl.classList.remove('dropzone--dragover');\n      this.#dropzoneEl.part.remove('dropzone--dragover');\n    }\n\n    try {\n      this.#handleFilesSelect(await getFilesFromEvent(evt));\n    } catch (error) {\n      this.dispatchEvent(\n        new CustomEvent(`${COMPONENT_NAME}-error`, {\n          bubbles: true,\n          composed: true,\n          detail: { error }\n        })\n      );\n    }\n  };\n\n  /**\n   * Handles the click event of the dropzone.\n   */\n  #handleClick = () => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.#fileInput?.click();\n  };\n\n  /**\n   * Handles the keyup event of the dropzone.\n   *\n   * @param {*} evt - The event object.\n   */\n  #handleKeyUp = evt => {\n    if (this.disabled) {\n      return;\n    }\n\n    if (evt.key === ' ' || evt.key === 'Enter') {\n      this.#fileInput?.click();\n    }\n  };\n\n  /**\n   * Handles the selection of files.\n   *\n   * @param {File[]} files - The files to handle.\n   */\n  #handleFilesSelect(files) {\n    if (!Array.isArray(files) || !files.length) {\n      return;\n    }\n\n    const acceptedFiles = [];\n    const rejectedFiles = [];\n    const filesLength = files.length;\n\n    // If the component is not in multiple mode, reject all files.\n    if (!this.multiple && filesLength > 1) {\n      for (const file of files) {\n        rejectedFiles.push({\n          file,\n          errors: [\n            {\n              code: TOO_MANY_FILES,\n              message: `Too many files selected. Only 1 file is allowed.`\n            }\n          ]\n        });\n      }\n    } else if (this.multiple && filesLength > this.maxFiles) {\n      // If the component is in multiple mode, but the number of files exceeds\n      // the maxFiles attribute, reject all files.\n      for (const file of files) {\n        rejectedFiles.push({\n          file,\n          errors: [\n            {\n              code: TOO_MANY_FILES,\n              message: `Too many files selected. Only ${this.maxFiles} ${this.maxFiles > 1 ? 'files are' : 'file is'} allowed.`\n            }\n          ]\n        });\n      }\n    } else {\n      // Validate each file. If it's valid, add it to the accepted files array,\n      // otherwise add it to the rejected files array.\n      for (const file of files) {\n        const fileHasValidType = isValidFile(file, this.accept);\n        const fileExceedsMaxSize = file.size > this.maxSize;\n        const fileIsSmallerThanMinSize = file.size < this.minSize;\n\n        if (fileHasValidType && !fileExceedsMaxSize && !fileIsSmallerThanMinSize) {\n          acceptedFiles.push(file);\n        } else {\n          const errors = [];\n\n          if (!fileHasValidType) {\n            errors.push({\n              code: INVALID_MIME_TYPE,\n              message: `File type \"${file.type}\" is not accepted.`\n            });\n          }\n\n          if (fileExceedsMaxSize) {\n            errors.push({\n              code: FILE_TOO_LARGE,\n              message: `File size ${file.size} exceeds the maximum size of ${this.maxSize}.`\n            });\n          }\n\n          if (fileIsSmallerThanMinSize) {\n            errors.push({\n              code: FILE_TOO_SMALL,\n              message: `File size ${file.size} is smaller than the minimum size of ${this.minSize}.`\n            });\n          }\n\n          rejectedFiles.push({ file, errors });\n        }\n      }\n    }\n\n    this.dispatchEvent(\n      new CustomEvent(`${COMPONENT_NAME}-drop`, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          acceptedFiles,\n          rejectedFiles\n        }\n      })\n    );\n\n    if (acceptedFiles.length > 0) {\n      this.dispatchEvent(\n        new CustomEvent(`${COMPONENT_NAME}-drop-accepted`, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            acceptedFiles\n          }\n        })\n      );\n    }\n\n    if (rejectedFiles.length > 0) {\n      this.dispatchEvent(\n        new CustomEvent(`${COMPONENT_NAME}-drop-rejected`, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            rejectedFiles\n          }\n        })\n      );\n    }\n\n    if (this.#fileInput) {\n      this.#fileInput.value = this.#fileInput.defaultValue;\n    }\n  }\n\n  /**\n   * Opens the file dialog programmatically.\n   */\n  openFileDialog() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.#fileInput?.click();\n  }\n\n  /**\n   * This is to safe guard against cases where, for instance, a framework may have added the element to the page and set a\n   * value on one of its properties, but lazy loaded its definition. Without this guard, the upgraded element would miss that\n   * property and the instance property would prevent the class property setter from ever being called.\n   *\n   * https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n   *\n   * @param {'accept' | 'disabled' | 'maxFiles' | 'maxSize' | 'minSize' | 'multiple' | 'autoFocus' | 'noStyle'} prop - The property name to upgrade.\n   */\n  #upgradeProperty(prop) {\n    /** @type {any} */\n    const instance = this;\n\n    if (Object.prototype.hasOwnProperty.call(instance, prop)) {\n      const value = instance[prop];\n      delete instance[prop];\n      instance[prop] = value;\n    }\n  }\n\n  /**\n   * Defines a custom element with the given name.\n   * The name must contain a dash (-).\n   *\n   * @param {string} [elementName='files-dropzone'] - The name of the custom element.\n   * @example\n   *\n   * FilesDropzone.defineCustomElement('my-dropzone');\n   */\n  static defineCustomElement(elementName = COMPONENT_NAME) {\n    if (typeof window !== 'undefined' && !window.customElements.get(elementName)) {\n      window.customElements.define(elementName, FilesDropzone);\n    }\n  }\n}\n\nexport { FilesDropzone };\n"],
  "mappings": "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",
  "names": ["isValidFile", "file", "acceptedTypeSpecifiers", "acceptedMimeTypesList", "v", "fileMimeType", "baseMimeType", "validType", "COMMON_MIME_TYPES", "FILES_TO_IGNORE", "toFileWithMimeType", "file", "name", "extension", "type", "toFileWithPath", "path", "fileWithMimeType", "webkitRelativePath", "readEntriesPromise", "directoryReader", "resolve", "reject", "readAllDirectoryEntries", "entries", "readEntries", "getFileFromFileEntry", "fileEntry", "getFilesFromDataTransferItemList", "dataTransferItemList", "files", "queue", "item", "entry", "getFilesFromFileList", "fileList", "getFilesFromEvent", "evt", "COMPONENT_NAME", "TOO_MANY_FILES", "FILE_TOO_LARGE", "FILE_TOO_SMALL", "INVALID_MIME_TYPE", "template", "styles", "FilesDropzone", "_FilesDropzone", "#fileInput", "#dropzoneEl", "name", "oldValue", "newValue", "#upgradeProperty", "#handleFileInputChange", "#handleDragEnter", "#handleDragOver", "#handleDragLeave", "#handleDrop", "#handleClick", "#handleKeyUp", "value", "num", "evt", "#handleFilesSelect", "getFilesFromEvent", "error", "files", "acceptedFiles", "rejectedFiles", "filesLength", "file", "fileHasValidType", "isValidFile", "fileExceedsMaxSize", "fileIsSmallerThanMinSize", "errors", "prop", "instance", "elementName"]
}
